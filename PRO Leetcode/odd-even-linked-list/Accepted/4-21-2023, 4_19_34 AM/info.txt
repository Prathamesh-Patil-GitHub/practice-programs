{"id":937383720,"lang":"cpp","lang_name":"C++","time":"3Â weeks, 2Â days","timestamp":1682075974,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/937383720/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        ListNode *oddStart = NULL, *oddEnd = NULL, *evenStart = NULL, *evenEnd = NULL, *curr = head;\n        int i=1;\n        while(curr){\n            if(i%2){\n                if(!oddStart){\n                    oddStart = curr;\n                    oddEnd = oddStart;\n                }\n                else{\n                    oddEnd->next = curr;\n                    oddEnd = curr;\n                }\n                curr = curr->next;\n                oddEnd->next = NULL;\n            }\n            else{\n                if(!evenStart){\n                    evenStart = curr;\n                    evenEnd = evenStart;\n                }\n                else{\n                    evenEnd->next = curr;\n                    evenEnd = curr;\n                }\n                curr = curr->next;\n                evenEnd->next = NULL;\n            }\n            i++;\n        }\n        if(!evenStart) return oddStart;\n        if(!oddStart) return evenStart;\n        \n        oddEnd->next = evenStart;\n        return oddStart;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false}