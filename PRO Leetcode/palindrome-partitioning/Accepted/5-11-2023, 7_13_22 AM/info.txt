{"id":948456977,"lang":"cpp","lang_name":"C++","time":"3 days, 20 hours","timestamp":1683814402,"status":10,"status_display":"Accepted","runtime":"145 ms","url":"/submissions/detail/948456977/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.5 MB","code":"class Solution {\npublic:\n    bool isPalindrome(string str, int start, int end){\n        while(start<=end){\n            if(str[start++] != str[end--]) return false;\n        }\n        return true;\n    }\n\n    void findCombination(vector<vector<string>> &ans, vector<string> &path, int index, string s){\n        if(index == s.length()){\n            ans.push_back(path);\n            return;\n        }\n        for(int i=index;i<s.length();i++){\n            if(isPalindrome(s, index, i)){\n                path.push_back(s.substr(index, i-index+1));\n                findCombination(ans, path, i+1, s);\n                path.pop_back();\n            }\n        }\n    }\n\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>> ans;\n        vector<string> path;\n        findCombination(ans, path, 0, s);\n        return ans;\n    }\n\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}