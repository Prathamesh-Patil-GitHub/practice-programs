{"id":938556185,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1682271739,"status":10,"status_display":"Accepted","runtime":"195 ms","url":"/submissions/detail/938556185/","is_pending":"Not Pending","title":"Sort List","memory":"53.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* sortList(ListNode* head) {\n        if(!head || !head->next) return head;\n        \n        vector<int> nums;\n        ListNode* curr = head;\n        while(curr){\n            nums.push_back(curr->val);\n            curr = curr->next;\n        }\n\n        sort(nums.begin(), nums.end());\n\n        int i=0;\n        curr = head;\n        while(curr){\n            curr->val = nums[i++];\n            curr = curr->next;\n        }\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"sort-list","has_notes":false}