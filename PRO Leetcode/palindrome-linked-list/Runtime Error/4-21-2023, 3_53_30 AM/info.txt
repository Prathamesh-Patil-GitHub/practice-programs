{"id":937375370,"lang":"cpp","lang_name":"C++","time":"3Â weeks, 2Â days","timestamp":1682074410,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/937375370/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        ListNode *fast = head, *slow = head, *temp, *prev=NULL;\n        while(fast && fast->next){\n            fast = fast->next->next;\n            temp = slow->next;\n            slow->next = prev;\n            prev = slow;\n            slow = temp;\n        }\n        while(slow){\n            if(slow->val != prev->val) return false;\n            slow = slow->next;\n            prev = prev->next;\n        }\n        return true;\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"palindrome-linked-list","has_notes":false}