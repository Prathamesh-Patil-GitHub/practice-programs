{"id":937373605,"lang":"cpp","lang_name":"C++","time":"3Â weeks, 2Â days","timestamp":1682074065,"status":10,"status_display":"Accepted","runtime":"265 ms","url":"/submissions/detail/937373605/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"122.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        string str = \"\";\n        ListNode* curr = head;\n        while(curr){\n            str += curr->val;\n            curr = curr->next;\n        }\n        string temp = str;\n        reverse(str.begin(), str.end());\n        return str == temp;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}