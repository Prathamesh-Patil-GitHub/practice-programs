{"id":923758792,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1680024304,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/923758792/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"\n\nclass Solution {\npublic:\n    bool check(int m, vector<int> piles, int h){\n        int count = 0;\n        for(int pile:piles){\n            count += ceil(float(pile)/m);\n        }\n        if(count<=h) return true;\n        else return false;\n    }\n\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int low = ceil(double(accumulate(piles.begin(), piles.end(), 0))/h);\n        int high = *max_element(piles.begin(), piles.end());\n\n        while(low<=high){\n            int mid = low+(high-low)>>1;\n            if(check(mid, piles, h)){\n                high = mid-1;\n            }\n            else{\n                low = mid+1;\n            }\n        }\n        return low;\n    }\n};","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"koko-eating-bananas","has_notes":false}