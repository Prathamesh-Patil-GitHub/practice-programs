{"id":926535200,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1680429898,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/926535200/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"N/A","code":"class Solution {\npublic:\n\n    bool isPossible(int mid, vector<int> nums, int k){\n        int total = 0;\n        int count = 1;\n        for(int num: nums){\n            total += num;\n            if(total>=mid){\n                count++;\n                total = num;\n            }\n        }\n        return count<=k;\n    }\n\n    int splitArray(vector<int>& nums, int k) {\n        int low = *max_element(nums.begin(), nums.end());\n        int high = accumulate(nums.begin(), nums.end(), 0);\n        int ans = -1;\n        while(low<=high){\n            int mid = low+(high-low)/2;\n            if(isPossible(mid, nums, k)){\n                ans = mid;\n                high = mid - 1;\n            }\n            else{\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n};","compare_result":"1101101100111111111111011110101","title_slug":"split-array-largest-sum","has_notes":false}