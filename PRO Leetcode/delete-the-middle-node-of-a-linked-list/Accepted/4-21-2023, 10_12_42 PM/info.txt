{"id":937727206,"lang":"cpp","lang_name":"C++","time":"3Â weeks, 2Â days","timestamp":1682140362,"status":10,"status_display":"Accepted","runtime":"1025 ms","url":"/submissions/detail/937727206/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(!head || !head->next) return NULL;\n\n        ListNode *slow = head, *fast = head, *prev = NULL;\n    \n        while(fast && fast->next){\n            fast = fast->next->next;\n            prev = slow;\n            slow = slow->next;\n        }\n        prev->next = prev->next->next;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}