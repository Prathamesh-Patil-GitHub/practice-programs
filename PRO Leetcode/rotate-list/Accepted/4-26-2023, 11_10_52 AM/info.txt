{"id":940208816,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1682532652,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/940208816/","is_pending":"Not Pending","title":"Rotate List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head || !head->next) return head;\n\n        ListNode *second = head;\n        int size = 1;\n        while(second->next){\n            size++;\n            second = second->next;\n        }\n        k = k%size;\n        ListNode *first = head;\n        for(int i=1;i<(size-k);i++){\n            first = first->next;\n        }\n        second->next = head;\n        head = first->next;\n        first->next = NULL;\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false}