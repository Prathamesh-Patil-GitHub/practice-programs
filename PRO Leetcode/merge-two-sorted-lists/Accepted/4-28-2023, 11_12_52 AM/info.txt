{"id":941227321,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1682705572,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/941227321/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if(list1 == NULL)\n            return list2;\n\t\t\n        if(list2 == NULL)\n            return list1;\n        \n        ListNode *dummy = new ListNode(0);\n        ListNode *copy = dummy;\n        ListNode *first = list1;\n        ListNode *second = list2;\n        while(first && second){\n            if(first->val <= second->val){\n                copy->next = first;\n                first = first->next;\n            }\n            else{\n                copy->next = second;\n                second = second->next;\n            }\n            copy = copy->next;\n        }\n\n        if(first) copy->next = first;\n        else copy->next = second;\n\n        return dummy->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}