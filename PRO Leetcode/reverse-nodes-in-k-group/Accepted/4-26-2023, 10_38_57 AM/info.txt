{"id":940191541,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1682530737,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/940191541/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        if(!head || k == 1) return head;\n\n        ListNode *dummy = new ListNode(0);\n        dummy->next = head;\n\n        ListNode *curr = dummy, *prev = dummy, *next = dummy;\n        int count = 0;\n        while(curr->next){\n            curr = curr->next;\n            count++;\n        }\n\n        while(count >= k){\n            curr = prev->next;\n            next = curr->next;\n            for(int i=1;i<k;i++){\n                curr->next = next->next;\n                next->next = prev->next;\n                prev->next = next;\n                next = curr->next;\n            }\n            prev = curr;\n            count-=k;\n        }\n        return dummy->next;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false}