{"id":949781696,"lang":"cpp","lang_name":"C++","time":"1 day, 15 hours","timestamp":1684004047,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/949781696/","is_pending":"Not Pending","title":"N-Queens","memory":"7.1 MB","code":"class Solution {\npublic:\n    void solve(int col, vector<vector<string>> &ans, vector<string> &board, int n, vector<int> &leftRow, vector<int> &upperDig, vector<int> &lowerDig){\n        if(col == n){\n            ans.push_back(board);\n            return;\n        }\n\n        for(int row=0;row<n;row++){\n            if(board[row][col] != 'Q' && leftRow[row] == 0 && lowerDig[row+col] == 0 && upperDig[(n-1)+(col-row)] == 0){\n                board[row][col] = 'Q';\n                leftRow[row] = 1;\n                lowerDig[row+col] = 1;\n                upperDig[(n-1)+(col-row)] = 1;\n                solve(col+1, ans, board, n, leftRow, upperDig, lowerDig);\n                leftRow[row] = 0;\n                lowerDig[row+col] = 0;\n                upperDig[(n-1)+(col-row)] = 0;\n                board[row][col] = '.';\n            }\n        }\n    }\n\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<string>> ans;\n        vector<string> board;\n        string s(n, '.');\n        vector<int> leftRow(n, 0), upperDig(2*n-1, 0), lowerDig(2*n-1, 0);\n        for(int i=0;i<n;i++){\n            board.push_back(s);\n        }\n        solve(0, ans, board, n, leftRow, upperDig, lowerDig);\n\n        return ans;\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false}