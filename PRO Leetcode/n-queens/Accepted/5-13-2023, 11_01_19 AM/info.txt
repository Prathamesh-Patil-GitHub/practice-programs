{"id":949753882,"lang":"cpp","lang_name":"C++","time":"1 day, 16 hours","timestamp":1684000879,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/949753882/","is_pending":"Not Pending","title":"N-Queens","memory":"7 MB","code":"class Solution {\npublic:\n\n    bool isSafe(vector<string> &board, int row, int col, int n){\n        int rowDup = row, colDup = col;\n\n        while(row>=0 && col>=0){\n            if(board[row][col] == 'Q') return false;\n            row--, col--;\n        }\n\n        row = rowDup, col = colDup;\n        while(col>=0){\n            if(board[row][col] == 'Q') return false;\n            col--;\n        }\n\n        col = colDup;\n        while(row<n && col>=0){\n            if(board[row][col] == 'Q') return false;\n            row++, col--;\n        }\n        \n        return true;\n    }\n\n    void solve(int col, vector<vector<string>> &ans, vector<string> &board, int n){\n        if(col == n){\n            ans.push_back(board);\n            return;\n        }\n\n        for(int row=0;row<n;row++){\n            if(isSafe(board, row, col, n)){\n                board[row][col] = 'Q';\n                solve(col+1, ans, board, n);\n                board[row][col] = '.';\n            }\n        }\n    }\n\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<string>> ans;\n        vector<string> board;\n        string s(n, '.');\n        for(int i=0;i<n;i++){\n            board.push_back(s);\n        }\n        solve(0, ans, board, n);\n\n        return ans;\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false}