{"id":940696802,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1682614006,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/940696802/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        unordered_map<Node* , Node*> um;\n        \n        Node* curr = head;\n        while(curr){\n            Node *temp = new Node(curr->val);\n            um[curr] = temp;\n            curr = curr->next;\n        }\n        curr = head;\n        while(curr){\n            if(curr->next)  um[curr]->next = um[curr->next];\n            else um[curr]->next = NULL;\n            if(curr->random)    um[curr]->random = um[curr->random];\n            else um[curr]->random = NULL;\n            \n            curr = curr->next;\n        }\n        return um[head];\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}